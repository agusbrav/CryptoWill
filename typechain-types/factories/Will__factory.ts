/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from "ethers";
import type { Will, WillInterface } from "../Will";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_testator",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_waitTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "_payees",
        type: "address[]",
      },
    ],
    name: "ApprovedPayees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_oldExecutor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newExecutor",
        type: "address",
      },
    ],
    name: "ChangedExecutor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "correspondingTokens",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Will.WillToken[]",
        name: "_tokens",
        type: "tuple[]",
      },
    ],
    name: "ERC20TokensSupplied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_executorFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_ethPerPayee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "correspondingTokens",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Will.WillToken[]",
        name: "_tokens",
        type: "tuple[]",
      },
    ],
    name: "SharesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "_exec",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_numberOfPayees",
        type: "uint256",
      },
    ],
    name: "WillExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_withdrawAvailable",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_correspondingEth",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_executorFee",
        type: "uint256",
      },
    ],
    name: "WillReport",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EXECUTOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYEE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "correspondingEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executeWill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executorFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_newExecutor",
        type: "address",
      },
    ],
    name: "replaceExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetWill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeWill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable[]",
        name: "_payeesAdd",
        type: "address[]",
      },
    ],
    name: "setWill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tokenId",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "setWillNFTs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "_tokenContract",
        type: "address[]",
      },
    ],
    name: "setWillToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "willManuscript",
    outputs: [
      {
        internalType: "address",
        name: "testator",
        type: "address",
      },
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "waitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "willNFTs",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "willStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "willTokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "correspondingTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027e9380380620027e9833981016040819052620000349162000240565b60018055600680546001600160a01b038086166001600160a01b031992831617909255600780549285169290911691909117905562000077816201518062000281565b600a556009805460ff191690556200009f600080516020620027c98339815191528462000128565b620000ba600080516020620027a98339815191528362000128565b620000e4600080516020620027a9833981519152600080516020620027c983398151915262000138565b6200011f7fdd3cf490277a2ed9b8e9d23db09c21bd229077712bc2c8266158d0d92288625a600080516020620027c983398151915262000138565b505050620002af565b62000134828262000183565b5050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000134576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001df3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b03811681146200023b57600080fd5b919050565b6000806000606084860312156200025657600080fd5b620002618462000223565b9250620002716020850162000223565b9150604084015190509250925092565b6000816000190483118215151615620002aa57634e487b7160e01b600052601160045260246000fd5b500290565b6124ea80620002bf6000396000f3fe60806040526004361061018b5760003560e01c80637a9f4bfc116100d6578063a581a1b51161007f578063bf01407411610059578063bf014074146104d8578063d547741f146104ee578063d5a4f9ed1461050e57600080fd5b8063a581a1b514610434578063a5b83635146104a3578063b32b027e146104b857600080fd5b806391d14854116100b057806391d14854146103c85780639cc7f7241461040c578063a217fddf1461041f57600080fd5b80637a9f4bfc1461035f5780637e3060531461037f5780638d086da4146103b357600080fd5b8063248a9ca31161013857806341ab52961161011257806341ab529614610301578063630dc7cb146103165780636fa533f01461034a57600080fd5b8063248a9ca3146102915780632f2ff15d146102c157806336568abe146102e157600080fd5b8063071805bf11610169578063071805bf146102285780630cbb915714610248578063117803e31461025d57600080fd5b806301ffc9a714610190578063062af0b0146101c557806306483b3e146101e9575b600080fd5b34801561019c57600080fd5b506101b06101ab366004611e48565b610523565b60405190151581526020015b60405180910390f35b3480156101d157600080fd5b506101db60035481565b6040519081526020016101bc565b3480156101f557600080fd5b50610209610204366004611e9a565b61055a565b604080516001600160a01b0390931683526020830191909152016101bc565b34801561023457600080fd5b50610209610243366004611ec6565b6105a0565b61025b610256366004611f4a565b6105d8565b005b34801561026957600080fd5b506101db7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b81565b34801561029d57600080fd5b506101db6102ac366004611ec6565b60009081526020819052604090206001015490565b3480156102cd57600080fd5b5061025b6102dc366004611fe9565b610944565b3480156102ed57600080fd5b5061025b6102fc366004611fe9565b61096f565b34801561030d57600080fd5b5061025b6109fb565b34801561032257600080fd5b506101db7f9cf85f95575c3af1e116e3d37fd41e7f36a8a373623f51ffaaa87fdd032fa76781565b34801561035657600080fd5b5061025b610a34565b34801561036b57600080fd5b5061025b61037a366004612019565b610b21565b34801561038b57600080fd5b506101db7fdd3cf490277a2ed9b8e9d23db09c21bd229077712bc2c8266158d0d92288625a81565b3480156103bf57600080fd5b5061025b610ccd565b3480156103d457600080fd5b506101b06103e3366004611fe9565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61025b61041a3660046120cf565b6113fc565b34801561042b57600080fd5b506101db600081565b34801561044057600080fd5b50600654600754600954600a54600b5461046a946001600160a01b0390811694169260ff16919085565b604080516001600160a01b039687168152959094166020860152911515928401929092526060830191909152608082015260a0016101bc565b3480156104af57600080fd5b5061025b6116bb565b3480156104c457600080fd5b5061025b6104d336600461215e565b61182c565b3480156104e457600080fd5b506101db60045481565b3480156104fa57600080fd5b5061025b610509366004611fe9565b61197d565b34801561051a57600080fd5b5061025b6119a3565b60006001600160e01b03198216637965db0b60e01b148061055457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6002602052816000526040600020818154811061057657600080fd5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b600581815481106105b057600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b600260015414156106305760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001557f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b61066081336119e0565b6702c68af0bb14000047108061068657506702c68af0bb1400006106844734612191565b115b6106d25760405162461bcd60e51b815260206004820152601f60248201527f4d696e756d756e2062616c616e6365206d75737420626520302e3220455448006044820152606401610627565b6008546106e09060326121a9565b825111156107305760405162461bcd60e51b815260206004820152601160248201527f4d617820706179656573206974732035300000000000000000000000000000006044820152606401610627565b60095460ff16156107835760405162461bcd60e51b815260206004820152601e60248201527f57696c6c2068617320616c7265616479206265656e20657865637574656400006044820152606401610627565b60005b82518110156109335760006001600160a01b03168382815181106107ac576107ac6121c0565b60200260200101516001600160a01b03161161080a5760405162461bcd60e51b815260206004820152601f60248201527f5468652061646472657373203078302063616e742062652061207061796565006044820152606401610627565b60075483516001600160a01b039091169084908390811061082d5761082d6121c0565b60200260200101516001600160a01b0316141561088c5760405162461bcd60e51b815260206004820152601c60248201527f546865206578656375746f722063616e742062652061207061796565000000006044820152606401610627565b6108cf7fdd3cf490277a2ed9b8e9d23db09c21bd229077712bc2c8266158d0d92288625a8483815181106108c2576108c26121c0565b6020026020010151610944565b60066002018382815181106108e6576108e66121c0565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558061092b816121d6565b915050610786565b5061093c610a34565b505060018055565b60008281526020819052604090206001015461096081336119e0565b61096a8383611a5e565b505050565b6001600160a01b03811633146109ed5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610627565b6109f78282611afc565b5050565b7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b610a2681336119e0565b6006546001600160a01b0316ff5b600654600754600b54600954600454600354604080516001600160a01b0397881681529690951660208701529385019290925260ff161515606084015247608084015260a083015260c08201527f15b0dfaa25e39d6b135d105f3b8938774f3af959c58c3b659ada7de9fa6ab80d9060e00160405180910390a16040517f6d5a0ba610656b28688a5f9d360558cc8d32af3338dc4a45890a0a48a7d63f1e90610adf906008906121f1565b60405180910390a17f78c4d320b4a1ce460d0d251b13edca36bbdf0e25453be27840601311b8a5ac0e6005604051610b179190612296565b60405180910390a1565b7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b610b4c81336119e0565b610b767fdd3cf490277a2ed9b8e9d23db09c21bd229077712bc2c8266158d0d92288625a836119e0565b8160005b8451811015610cc5576000869050806001600160a01b031663095ea7b330888581518110610baa57610baa6121c0565b60200260200101516040518363ffffffff1660e01b8152600401610be39291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b5050505060026000846001600160a01b03166001600160a01b031681526020019081526020016000206040518060400160405280836001600160a01b03168152602001888581518110610c6657610c666121c0565b602090810291909101810151909152825460018082018555600094855293829020835160029092020180546001600160a01b0319166001600160a01b039092169190911781559101519101555080610cbd816121d6565b915050610b7a565b505050505050565b7fdd3cf490277a2ed9b8e9d23db09c21bd229077712bc2c8266158d0d92288625a610cf881336119e0565b6702c68af0bb14000047118015610d10575060085415155b610d5c5760405162461bcd60e51b815260206004820152601d60248201527f546869732077696c6c20686173206e6f74206265656e207365742075700000006044820152606401610627565b60095460ff16610dae5760405162461bcd60e51b815260206004820152601e60248201527f57696c6c20686173206e6f74206265656e2065786563757465642079657400006044820152606401610627565b600b54421015610e005760405162461bcd60e51b815260206004820152601c60248201527f57696c6c206861736e74206265656e20756e6c6f636b656420796574000000006044820152606401610627565b610e08611b7b565b6000805b6008548110156113aa576008805482908110610e2a57610e2a6121c0565b60009182526020822001546004546040516001600160a01b039092169290919081818185875af1925050503d8060008114610e81576040519150601f19603f3d011682016040523d82523d6000602084013e610e86565b606091505b50508092505081610ed95760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610627565b60005b6005548110156110785760058181548110610ef957610ef96121c0565b6000918252602090912060029091020154600654600880546001600160a01b03938416936323b872dd9316919086908110610f3657610f366121c0565b600091825260209091200154600580546001600160a01b039092169186908110610f6257610f626121c0565b60009182526020909120600160029092020101546040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610fca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fee91906122a9565b92508261102860058481548110611007576110076121c0565b60009182526020909120600290910201546001600160a01b03166014611bb0565b60405160200161103891906122fb565b604051602081830303815290604052906110655760405162461bcd60e51b81526004016106279190612367565b5080611070816121d6565b915050610edc565b5060005b6002600060066002018481548110611096576110966121c0565b60009182526020808320909101546001600160a01b0316835282019290925260400190205481101561139757600654600880546001600160a01b0390921691600291600091869081106110eb576110eb6121c0565b60009182526020808320909101546001600160a01b031683528201929092526040019020805483908110611121576111216121c0565b60009182526020822060029182020154600880546001600160a01b0390921693636352211e93929091908890811061115b5761115b6121c0565b60009182526020808320909101546001600160a01b031683528201929092526040019020805485908110611191576111916121c0565b9060005260206000209060020201600101546040518263ffffffff1660e01b81526004016111c191815260200190565b602060405180830381865afa1580156111de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611202919061239a565b6001600160a01b03161461121557611385565b600260006006600201848154811061122f5761122f6121c0565b60009182526020808320909101546001600160a01b031683528201929092526040019020805482908110611265576112656121c0565b6000918252602090912060029091020154600654600880546001600160a01b03938416936323b872dd93169190869081106112a2576112a26121c0565b6000918252602082200154600880546001600160a01b0390921692600292909190899081106112d3576112d36121c0565b60009182526020808320909101546001600160a01b031683528201929092526040019020805486908110611309576113096121c0565b60009182526020909120600160029092020101546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561136c57600080fd5b505af1158015611380573d6000803e3d6000fd5b505050505b8061138f816121d6565b91505061107c565b50806113a2816121d6565b915050610e0c565b506003546004546040517fa540f6dec569f9115bb8f2f7bb36b7ca79772f23f243206e5d29c7efa331540c926113e692479233906005906123b7565b60405180910390a16007546001600160a01b0316ff5b6002600154141561144f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610627565b60026001557f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b61147f81336119e0565b6702c68af0bb14000047118015611497575060085415155b6114e35760405162461bcd60e51b815260206004820152601d60248201527f546869732077696c6c20686173206e6f74206265656e207365742075700000006044820152606401610627565b600554603210156115365760405162461bcd60e51b815260206004820152601e60248201527f546865206d6178206e756d626572206f6620746f6b656e7320697320353000006044820152606401610627565b6000805b835181101561167957838181518110611555576115556121c0565b602090810291909101015160405163095ea7b360e01b815230600482015260fd60248201529092506001600160a01b0383169063095ea7b3906044016020604051808303816000875af11580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d491906122a9565b50604080518082019091526001600160a01b03838116825260006020830181815260058054600181018255925292517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600290920291820180546001600160a01b031916919093161790915590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db19091015580611671816121d6565b91505061153a565b507f78c4d320b4a1ce460d0d251b13edca36bbdf0e25453be27840601311b8a5ac0e60056040516116aa9190612296565b60405180910390a150506001805550565b7f9cf85f95575c3af1e116e3d37fd41e7f36a8a373623f51ffaaa87fdd032fa7676116e681336119e0565b6702c68af0bb140000471180156116fe575060085415155b61174a5760405162461bcd60e51b815260206004820152601d60248201527f546869732077696c6c20686173206e6f74206265656e207365742075700000006044820152606401610627565b60095460ff161561179d5760405162461bcd60e51b815260206004820152601960248201527f416c726561647920686173206265656e206578656375746564000000000000006044820152606401610627565b600a546117aa9042612191565b600b81905560098054600160ff199091168117909155600a546007546008546040805194855260208501939093526001600160a01b0390911683830152606083019390935247608083015260a082019290925290517f34a4fc9c8f1ad8b9dafcdddf9bac9a9f5b5edff854223b5a4162dded356900c39181900360c00190a150565b7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b61185781336119e0565b6007546001600160a01b03838116911614156118b55760405162461bcd60e51b815260206004820152601560248201527f43616e742062652073616d65206578656375746f7200000000000000000000006044820152606401610627565b600780546001600160a01b038481166001600160a01b0319831617909255166118fe7f9cf85f95575c3af1e116e3d37fd41e7f36a8a373623f51ffaaa87fdd032fa7678261197d565b600754611935907f9cf85f95575c3af1e116e3d37fd41e7f36a8a373623f51ffaaa87fdd032fa767906001600160a01b0316610944565b604080516001600160a01b038084168252851660208201527f2c4dd2eb8fc81159ddfb343de0d4a37c90afac97ae143a4f936363cbbc79d6d3910160405180910390a1505050565b60008281526020819052604090206001015461199981336119e0565b61096a8383611afc565b7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b6119ce81336119e0565b506009805460ff191690556000600b55565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166109f757611a1c816001600160a01b03166014611bb0565b611a27836020611bb0565b604051602001611a389291906123eb565b60408051601f198184030181529082905262461bcd60e51b825261062791600401612367565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166109f7576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611ab83390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16156109f7576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611b86600a4761246c565b600381905560085490611b9990476121a9565b611ba3919061246c565b600455611bae611d60565b565b60606000611bbf83600261248e565b611bca906002612191565b67ffffffffffffffff811115611be257611be2611edf565b6040519080825280601f01601f191660200182016040528015611c0c576020820181803683370190505b509050600360fc1b81600081518110611c2757611c276121c0565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611c5657611c566121c0565b60200101906001600160f81b031916908160001a9053506000611c7a84600261248e565b611c85906001612191565b90505b6001811115611d0a577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611cc657611cc66121c0565b1a60f81b828281518110611cdc57611cdc6121c0565b60200101906001600160f81b031916908160001a90535060049490941c93611d03816124ad565b9050611c88565b508315611d595760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610627565b9392505050565b6000805b6005548110156109f75760058181548110611d8157611d816121c0565b60009182526020909120600290910201546006546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015611ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dff91906124c4565b600854909250611e0f908361246c565b60058281548110611e2257611e226121c0565b600091825260209091206001600290920201015580611e40816121d6565b915050611d64565b600060208284031215611e5a57600080fd5b81356001600160e01b031981168114611d5957600080fd5b6001600160a01b0381168114611e8757600080fd5b50565b8035611e9581611e72565b919050565b60008060408385031215611ead57600080fd5b8235611eb881611e72565b946020939093013593505050565b600060208284031215611ed857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f1e57611f1e611edf565b604052919050565b600067ffffffffffffffff821115611f4057611f40611edf565b5060051b60200190565b60006020808385031215611f5d57600080fd5b823567ffffffffffffffff811115611f7457600080fd5b8301601f81018513611f8557600080fd5b8035611f98611f9382611f26565b611ef5565b81815260059190911b82018301908381019087831115611fb757600080fd5b928401925b82841015611fde578335611fcf81611e72565b82529284019290840190611fbc565b979650505050505050565b60008060408385031215611ffc57600080fd5b82359150602083013561200e81611e72565b809150509250929050565b60008060006060848603121561202e57600080fd5b833561203981611e72565b925060208481013567ffffffffffffffff81111561205657600080fd5b8501601f8101871361206757600080fd5b8035612075611f9382611f26565b81815260059190911b8201830190838101908983111561209457600080fd5b928401925b828410156120b257833582529284019290840190612099565b80965050505050506120c660408501611e8a565b90509250925092565b600060208083850312156120e257600080fd5b823567ffffffffffffffff8111156120f957600080fd5b8301601f8101851361210a57600080fd5b8035612118611f9382611f26565b81815260059190911b8201830190838101908783111561213757600080fd5b928401925b82841015611fde57833561214f81611e72565b8252928401929084019061213c565b60006020828403121561217057600080fd5b8135611d5981611e72565b634e487b7160e01b600052601160045260246000fd5b600082198211156121a4576121a461217b565b500190565b6000828210156121bb576121bb61217b565b500390565b634e487b7160e01b600052603260045260246000fd5b60006000198214156121ea576121ea61217b565b5060010190565b6020808252825482820181905260008481528281209092916040850190845b818110156122355783546001600160a01b031683526001938401939285019201612210565b50909695505050505050565b6000815480845260208085019450836000528060002060005b8381101561228b5781546001600160a01b03168752600180830154848901526040909701966002909201910161225a565b509495945050505050565b602081526000611d596020830184612241565b6000602082840312156122bb57600080fd5b81518015158114611d5957600080fd5b60005b838110156122e65781810151838201526020016122ce565b838111156122f5576000848401525b50505050565b7f4661696c656420746f2073656e6400000000000000000000000000000000000081526000825161233381600e8501602087016122cb565b7f746f6b656e000000000000000000000000000000000000000000000000000000600e939091019283015250601301919050565b60208152600082518060208401526123868160408501602087016122cb565b601f01601f19169190910160400192915050565b6000602082840312156123ac57600080fd5b8151611d5981611e72565b8581528460208201528360408201526001600160a01b038316606082015260a060808201526000611fde60a0830184612241565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516124238160178501602088016122cb565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516124608160288401602088016122cb565b01602801949350505050565b60008261248957634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156124a8576124a861217b565b500290565b6000816124bc576124bc61217b565b506000190190565b6000602082840312156124d657600080fd5b505191905056fea164736f6c634300080a000a9cf85f95575c3af1e116e3d37fd41e7f36a8a373623f51ffaaa87fdd032fa7676270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b";

type WillConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WillConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Will__factory extends ContractFactory {
  constructor(...args: WillConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Will";
  }

  deploy(
    _testator: string,
    _executor: string,
    _waitTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Will> {
    return super.deploy(
      _testator,
      _executor,
      _waitTime,
      overrides || {}
    ) as Promise<Will>;
  }
  getDeployTransaction(
    _testator: string,
    _executor: string,
    _waitTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _testator,
      _executor,
      _waitTime,
      overrides || {}
    );
  }
  attach(address: string): Will {
    return super.attach(address) as Will;
  }
  connect(signer: Signer): Will__factory {
    return super.connect(signer) as Will__factory;
  }
  static readonly contractName: "Will";
  public readonly contractName: "Will";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WillInterface {
    return new utils.Interface(_abi) as WillInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Will {
    return new Contract(address, _abi, signerOrProvider) as Will;
  }
}
