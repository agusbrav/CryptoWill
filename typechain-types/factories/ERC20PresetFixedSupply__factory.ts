/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from "ethers";
import type {
  ERC20PresetFixedSupply,
  ERC20PresetFixedSupplyInterface,
} from "../ERC20PresetFixedSupply";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e7e38038062001e7e8339818101604052810190620000379190620004f9565b83838160039080519060200190620000519291906200020c565b5080600490805190602001906200006a9291906200020c565b5050506200007f81836200008960201b60201c565b505050506200074b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f3906200060a565b60405180910390fd5b62000110600083836200020260201b60201c565b80600260008282546200012491906200065b565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200017b91906200065b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001e29190620006c9565b60405180910390a3620001fe600083836200020760201b60201c565b5050565b505050565b505050565b8280546200021a9062000715565b90600052602060002090601f0160209004810192826200023e57600085556200028a565b82601f106200025957805160ff19168380011785556200028a565b828001600101855582156200028a579182015b82811115620002895782518255916020019190600101906200026c565b5b5090506200029991906200029d565b5090565b5b80821115620002b85760008160009055506001016200029e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032582620002da565b810181811067ffffffffffffffff82111715620003475762000346620002eb565b5b80604052505050565b60006200035c620002bc565b90506200036a82826200031a565b919050565b600067ffffffffffffffff8211156200038d576200038c620002eb565b5b6200039882620002da565b9050602081019050919050565b60005b83811015620003c5578082015181840152602081019050620003a8565b83811115620003d5576000848401525b50505050565b6000620003f2620003ec846200036f565b62000350565b905082815260208101848484011115620004115762000410620002d5565b5b6200041e848285620003a5565b509392505050565b600082601f8301126200043e576200043d620002d0565b5b815162000450848260208601620003db565b91505092915050565b6000819050919050565b6200046e8162000459565b81146200047a57600080fd5b50565b6000815190506200048e8162000463565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004c18262000494565b9050919050565b620004d381620004b4565b8114620004df57600080fd5b50565b600081519050620004f381620004c8565b92915050565b60008060008060808587031215620005165762000515620002c6565b5b600085015167ffffffffffffffff811115620005375762000536620002cb565b5b620005458782880162000426565b945050602085015167ffffffffffffffff811115620005695762000568620002cb565b5b620005778782880162000426565b93505060406200058a878288016200047d565b92505060606200059d87828801620004e2565b91505092959194509250565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005f2601f83620005a9565b9150620005ff82620005ba565b602082019050919050565b600060208201905081810360008301526200062581620005e3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006688262000459565b9150620006758362000459565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006ad57620006ac6200062c565b5b828201905092915050565b620006c38162000459565b82525050565b6000602082019050620006e06000830184620006b8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200072e57607f821691505b60208210811415620007455762000744620006e6565b5b50919050565b611723806200075b6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b4114610236578063a457c2d714610254578063a9059cbb14610284578063dd62ed3e146102b4576100df565b806342966c68146101ce57806370a08231146101ea57806379cc67901461021a576100df565b806323b872dd116100bd57806323b872dd14610150578063313ce56714610180578063395093511461019e576100df565b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610132575b600080fd5b6100ec6102e4565b6040516100f99190610e81565b60405180910390f35b61011c60048036038101906101179190610f3c565b610376565b6040516101299190610f97565b60405180910390f35b61013a610399565b6040516101479190610fc1565b60405180910390f35b61016a60048036038101906101659190610fdc565b6103a3565b6040516101779190610f97565b60405180910390f35b6101886103d2565b604051610195919061104b565b60405180910390f35b6101b860048036038101906101b39190610f3c565b6103db565b6040516101c59190610f97565b60405180910390f35b6101e860048036038101906101e39190611066565b610485565b005b61020460048036038101906101ff9190611093565b610499565b6040516102119190610fc1565b60405180910390f35b610234600480360381019061022f9190610f3c565b6104e1565b005b61023e610501565b60405161024b9190610e81565b60405180910390f35b61026e60048036038101906102699190610f3c565b610593565b60405161027b9190610f97565b60405180910390f35b61029e60048036038101906102999190610f3c565b61067d565b6040516102ab9190610f97565b60405180910390f35b6102ce60048036038101906102c991906110c0565b6106a0565b6040516102db9190610fc1565b60405180910390f35b6060600380546102f39061112f565b80601f016020809104026020016040519081016040528092919081815260200182805461031f9061112f565b801561036c5780601f106103415761010080835404028352916020019161036c565b820191906000526020600020905b81548152906001019060200180831161034f57829003601f168201915b5050505050905090565b600080610381610727565b905061038e81858561072f565b600191505092915050565b6000600254905090565b6000806103ae610727565b90506103bb8582856108fa565b6103c6858585610986565b60019150509392505050565b60006012905090565b6000806103e6610727565b905061047a818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104759190611190565b61072f565b600191505092915050565b610496610490610727565b82610c07565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104f3826104ed610727565b836108fa565b6104fd8282610c07565b5050565b6060600480546105109061112f565b80601f016020809104026020016040519081016040528092919081815260200182805461053c9061112f565b80156105895780601f1061055e57610100808354040283529160200191610589565b820191906000526020600020905b81548152906001019060200180831161056c57829003601f168201915b5050505050905090565b60008061059e610727565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b90611258565b60405180910390fd5b610671828686840361072f565b60019250505092915050565b600080610688610727565b9050610695818585610986565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561079f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610796906112ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561080f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108069061137c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108ed9190610fc1565b60405180910390a3505050565b600061090684846106a0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109805781811015610972576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610969906113e8565b60405180910390fd5b61097f848484840361072f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed9061147a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5d9061150c565b60405180910390fd5b610a71838383610dde565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee9061159e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b8a9190611190565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bee9190610fc1565b60405180910390a3610c01848484610de3565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6e90611630565b60405180910390fd5b610c8382600083610dde565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d00906116c2565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610d6091906116e2565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dc59190610fc1565b60405180910390a3610dd983600084610de3565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e22578082015181840152602081019050610e07565b83811115610e31576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e5382610de8565b610e5d8185610df3565b9350610e6d818560208601610e04565b610e7681610e37565b840191505092915050565b60006020820190508181036000830152610e9b8184610e48565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ed382610ea8565b9050919050565b610ee381610ec8565b8114610eee57600080fd5b50565b600081359050610f0081610eda565b92915050565b6000819050919050565b610f1981610f06565b8114610f2457600080fd5b50565b600081359050610f3681610f10565b92915050565b60008060408385031215610f5357610f52610ea3565b5b6000610f6185828601610ef1565b9250506020610f7285828601610f27565b9150509250929050565b60008115159050919050565b610f9181610f7c565b82525050565b6000602082019050610fac6000830184610f88565b92915050565b610fbb81610f06565b82525050565b6000602082019050610fd66000830184610fb2565b92915050565b600080600060608486031215610ff557610ff4610ea3565b5b600061100386828701610ef1565b935050602061101486828701610ef1565b925050604061102586828701610f27565b9150509250925092565b600060ff82169050919050565b6110458161102f565b82525050565b6000602082019050611060600083018461103c565b92915050565b60006020828403121561107c5761107b610ea3565b5b600061108a84828501610f27565b91505092915050565b6000602082840312156110a9576110a8610ea3565b5b60006110b784828501610ef1565b91505092915050565b600080604083850312156110d7576110d6610ea3565b5b60006110e585828601610ef1565b92505060206110f685828601610ef1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061114757607f821691505b6020821081141561115b5761115a611100565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061119b82610f06565b91506111a683610f06565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111db576111da611161565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611242602583610df3565b915061124d826111e6565b604082019050919050565b6000602082019050818103600083015261127181611235565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006112d4602483610df3565b91506112df82611278565b604082019050919050565b60006020820190508181036000830152611303816112c7565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611366602283610df3565b91506113718261130a565b604082019050919050565b6000602082019050818103600083015261139581611359565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006113d2601d83610df3565b91506113dd8261139c565b602082019050919050565b60006020820190508181036000830152611401816113c5565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611464602583610df3565b915061146f82611408565b604082019050919050565b6000602082019050818103600083015261149381611457565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006114f6602383610df3565b91506115018261149a565b604082019050919050565b60006020820190508181036000830152611525816114e9565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611588602683610df3565b91506115938261152c565b604082019050919050565b600060208201905081810360008301526115b78161157b565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061161a602183610df3565b9150611625826115be565b604082019050919050565b600060208201905081810360008301526116498161160d565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006116ac602283610df3565b91506116b782611650565b604082019050919050565b600060208201905081810360008301526116db8161169f565b9050919050565b60006116ed82610f06565b91506116f883610f06565b92508282101561170b5761170a611161565b5b82820390509291505056fea164736f6c634300080a000a";

type ERC20PresetFixedSupplyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20PresetFixedSupplyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20PresetFixedSupply__factory extends ContractFactory {
  constructor(...args: ERC20PresetFixedSupplyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20PresetFixedSupply";
  }

  deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20PresetFixedSupply> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      owner,
      overrides || {}
    ) as Promise<ERC20PresetFixedSupply>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      owner,
      overrides || {}
    );
  }
  attach(address: string): ERC20PresetFixedSupply {
    return super.attach(address) as ERC20PresetFixedSupply;
  }
  connect(signer: Signer): ERC20PresetFixedSupply__factory {
    return super.connect(signer) as ERC20PresetFixedSupply__factory;
  }
  static readonly contractName: "ERC20PresetFixedSupply";
  public readonly contractName: "ERC20PresetFixedSupply";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PresetFixedSupplyInterface {
    return new utils.Interface(_abi) as ERC20PresetFixedSupplyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20PresetFixedSupply {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20PresetFixedSupply;
  }
}
