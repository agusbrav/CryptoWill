/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
  CryptoWillToken,
  CryptoWillTokenInterface,
} from "../CryptoWillToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601181526020017f43727970746f2057696c6c20546f6b656e0000000000000000000000000000008152506040518060400160405280600381526020017f4357540000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620004ea565b508060049080519060200190620000af929190620004ea565b505050620000d2620000c66200026c60201b60201c565b6200027460201b60201c565b620001067fe783318a55a2b13edb1ff182af83da437cf9e45c0f99aff5e1cda16fd04973e460001b6200033a60201b60201c565b6200013a7ff784d1522d5af06158acf38537defaf96da8195d3e209a7cd5e7b898103ec3cd60001b6200033a60201b60201c565b6200016e7f47a59e941630a5194444002b7897d284b707ea6e27f873d0cefebd240cf290fe60001b6200033a60201b60201c565b6200017e6200033d60201b60201c565b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001f27fce787b94db1deb1a7df6ff6e0e6e87e2cf5f07045f405c58b450a20a9d6b686060001b6200033a60201b60201c565b620002267f17c0b2809ba77706f84e0e398c56306b91a3ae3075ecb89175e902a08b97569060001b6200033a60201b60201c565b62000266600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b204fce5e3e250261100000006200036760201b60201c565b62000746565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620003da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003d190620005fb565b60405180910390fd5b620003ee60008383620004e060201b60201c565b806002600082825462000402919062000656565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000459919062000656565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620004c09190620006c4565b60405180910390a3620004dc60008383620004e560201b60201c565b5050565b505050565b505050565b828054620004f89062000710565b90600052602060002090601f0160209004810192826200051c576000855562000568565b82601f106200053757805160ff191683800117855562000568565b8280016001018555821562000568579182015b82811115620005675782518255916020019190600101906200054a565b5b5090506200057791906200057b565b5090565b5b80821115620005965760008160009055506001016200057c565b5090565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005e3601f836200059a565b9150620005f082620005ab565b602082019050919050565b600060208201905081810360008301526200061681620005d4565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000663826200061d565b915062000670836200061d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006a857620006a762000627565b5b828201905092915050565b620006be816200061d565b82525050565b6000602082019050620006db6000830184620006b3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200072957607f821691505b6020821081141562000740576200073f620006e1565b5b50919050565b611a9580620007566000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb146102b1578063d4698016146102e1578063dd62ed3e146102ff578063f2fde38b1461032f57610100565b8063715018a61461023b5780638da5cb5b1461024557806395d89b4114610263578063a457c2d71461028157610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806340c10f19146101ef57806370a082311461020b57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61034b565b60405161011a91906111e4565b60405180910390f35b61013d6004803603810190610138919061129f565b6103dd565b60405161014a91906112fa565b60405180910390f35b61015b610400565b6040516101689190611324565b60405180910390f35b61018b6004803603810190610186919061133f565b61040a565b60405161019891906112fa565b60405180910390f35b6101a9610439565b6040516101b691906113ae565b60405180910390f35b6101d960048036038101906101d4919061129f565b610442565b6040516101e691906112fa565b60405180910390f35b6102096004803603810190610204919061129f565b6104ec565b005b610225600480360381019061022091906113c9565b6105fa565b6040516102329190611324565b60405180910390f35b610243610642565b005b61024d6106ca565b60405161025a9190611405565b60405180910390f35b61026b6106f4565b60405161027891906111e4565b60405180910390f35b61029b6004803603810190610296919061129f565b610786565b6040516102a891906112fa565b60405180910390f35b6102cb60048036038101906102c6919061129f565b610870565b6040516102d891906112fa565b60405180910390f35b6102e9610893565b6040516102f69190611405565b60405180910390f35b61031960048036038101906103149190611420565b6108b9565b6040516103269190611324565b60405180910390f35b610349600480360381019061034491906113c9565b610940565b005b60606003805461035a9061148f565b80601f01602080910402602001604051908101604052809291908181526020018280546103869061148f565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b6000806103e8610a38565b90506103f5818585610a40565b600191505092915050565b6000600254905090565b600080610415610a38565b9050610422858285610c0b565b61042d858585610c97565b60019150509392505050565b60006012905090565b60008061044d610a38565b90506104e1818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104dc91906114f0565b610a40565b600191505092915050565b6104f4610a38565b73ffffffffffffffffffffffffffffffffffffffff166105126106ca565b73ffffffffffffffffffffffffffffffffffffffff1614610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90611592565b60405180910390fd5b6105947fa14e5bfad3871cb2022da96e3f3ac09ed8ca8ac6cc77b6f9635491b6953b0bdb60001b610f18565b6105c07fd914eac7360984f1326b62f181accd22e8e1552987543904ec8d3162c8874b7e60001b610f18565b6105ec7fe07cfa146c213bdf1ede9c7be342c3a5870ab29ab5e8190e3555f4401708b2c860001b610f18565b6105f68282610f1b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61064a610a38565b73ffffffffffffffffffffffffffffffffffffffff166106686106ca565b73ffffffffffffffffffffffffffffffffffffffff16146106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590611592565b60405180910390fd5b6106c8600061107b565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107039061148f565b80601f016020809104026020016040519081016040528092919081815260200182805461072f9061148f565b801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b5050505050905090565b600080610791610a38565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084e90611624565b60405180910390fd5b6108648286868403610a40565b60019250505092915050565b60008061087b610a38565b9050610888818585610c97565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610948610a38565b73ffffffffffffffffffffffffffffffffffffffff166109666106ca565b73ffffffffffffffffffffffffffffffffffffffff16146109bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b390611592565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a23906116b6565b60405180910390fd5b610a358161107b565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790611748565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b17906117da565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610bfe9190611324565b60405180910390a3505050565b6000610c1784846108b9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c915781811015610c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7a90611846565b60405180910390fd5b610c908484848403610a40565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe906118d8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6e9061196a565b60405180910390fd5b610d82838383611141565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dff906119fc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e9b91906114f0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eff9190611324565b60405180910390a3610f12848484611146565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8290611a68565b60405180910390fd5b610f9760008383611141565b8060026000828254610fa991906114f0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ffe91906114f0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110639190611324565b60405180910390a361107760008383611146565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561118557808201518184015260208101905061116a565b83811115611194576000848401525b50505050565b6000601f19601f8301169050919050565b60006111b68261114b565b6111c08185611156565b93506111d0818560208601611167565b6111d98161119a565b840191505092915050565b600060208201905081810360008301526111fe81846111ab565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112368261120b565b9050919050565b6112468161122b565b811461125157600080fd5b50565b6000813590506112638161123d565b92915050565b6000819050919050565b61127c81611269565b811461128757600080fd5b50565b60008135905061129981611273565b92915050565b600080604083850312156112b6576112b5611206565b5b60006112c485828601611254565b92505060206112d58582860161128a565b9150509250929050565b60008115159050919050565b6112f4816112df565b82525050565b600060208201905061130f60008301846112eb565b92915050565b61131e81611269565b82525050565b60006020820190506113396000830184611315565b92915050565b60008060006060848603121561135857611357611206565b5b600061136686828701611254565b935050602061137786828701611254565b92505060406113888682870161128a565b9150509250925092565b600060ff82169050919050565b6113a881611392565b82525050565b60006020820190506113c3600083018461139f565b92915050565b6000602082840312156113df576113de611206565b5b60006113ed84828501611254565b91505092915050565b6113ff8161122b565b82525050565b600060208201905061141a60008301846113f6565b92915050565b6000806040838503121561143757611436611206565b5b600061144585828601611254565b925050602061145685828601611254565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114a757607f821691505b602082108114156114bb576114ba611460565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114fb82611269565b915061150683611269565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561153b5761153a6114c1565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061157c602083611156565b915061158782611546565b602082019050919050565b600060208201905081810360008301526115ab8161156f565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061160e602583611156565b9150611619826115b2565b604082019050919050565b6000602082019050818103600083015261163d81611601565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006116a0602683611156565b91506116ab82611644565b604082019050919050565b600060208201905081810360008301526116cf81611693565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611732602483611156565b915061173d826116d6565b604082019050919050565b6000602082019050818103600083015261176181611725565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006117c4602283611156565b91506117cf82611768565b604082019050919050565b600060208201905081810360008301526117f3816117b7565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611830601d83611156565b915061183b826117fa565b602082019050919050565b6000602082019050818103600083015261185f81611823565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006118c2602583611156565b91506118cd82611866565b604082019050919050565b600060208201905081810360008301526118f1816118b5565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611954602383611156565b915061195f826118f8565b604082019050919050565b6000602082019050818103600083015261198381611947565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006119e6602683611156565b91506119f18261198a565b604082019050919050565b60006020820190508181036000830152611a15816119d9565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a52601f83611156565b9150611a5d82611a1c565b602082019050919050565b60006020820190508181036000830152611a8181611a45565b905091905056fea164736f6c634300080a000a";

type CryptoWillTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoWillTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoWillToken__factory extends ContractFactory {
  constructor(...args: CryptoWillTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CryptoWillToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CryptoWillToken> {
    return super.deploy(overrides || {}) as Promise<CryptoWillToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CryptoWillToken {
    return super.attach(address) as CryptoWillToken;
  }
  connect(signer: Signer): CryptoWillToken__factory {
    return super.connect(signer) as CryptoWillToken__factory;
  }
  static readonly contractName: "CryptoWillToken";
  public readonly contractName: "CryptoWillToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoWillTokenInterface {
    return new utils.Interface(_abi) as CryptoWillTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptoWillToken {
    return new Contract(address, _abi, signerOrProvider) as CryptoWillToken;
  }
}
